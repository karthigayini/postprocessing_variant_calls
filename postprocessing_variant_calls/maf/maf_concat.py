"""
Script to merge multiple maf files produced by variants callers as part of the postprocessing process.
Tool does the following operations:
A. Read one or more maf files generated by variant callers
B. Obtain rows from multi-sample maf files based on string containing sample name
C. Merge input mafs to single maf for downstream processing
This infile is a tab-delimited MAF file. For full-spec, see: https://github.com/mskcc/vcf2maf/blob/main/docs/vep_maf_readme.txt

"""
import os
import time
import argparse


from pathlib import Path
from typing import List, Optional
import typer
import pandas as pd

def main(
    maf: Path = typer.Option(
        "--maf",
        "-m",
        exists=True,
        file_okay=True,
        dir_okay=False,
        writable=False,
        readable=True,
        resolve_path=True,
        help="MAF files to be concatenated",
    ),
    merged_maf: str = typer.Option(
        "merged.maf",
        "--name",
        "-n",
        help="Name of the output merged maf file",
    ),
):
    # Read maf files
    skip = get_row(maf)
    maf_df = pd.read_csv(maf, sep="\t", skiprows=skip, low_memory=False)
    # Minimum required columns for maf format
    #Hugo_Symbol, Chromosome, Start_Position, End_Position, Reference_Allele, Tumor_Seq_Allele2, Variant_Classification, Variant_Type, Tumor_Sample_Barcode
    maf_col_df = maf_df["Hugo_Symbol", "Chromosome", "Start_Position", "End_Position", "Reference_Allele", "Tumor_Seq_Allele2", "Variant_Classification", "Variant_Type", "Tumor_Sample_Barcode"]
    # Concatenate maf files
    merged_mafs = pd.concat(maf_col_df, axis=0)

    # Export merged maf
    merged_mafs().to_csv(merged_maf, sep="\t", index=False)

if __name__ == "__main__":
    typer.run(main)