name: test_post_processing
on:
  push:
    paths-ignore:
    - 'docs/**'
    - '**.md'
  pull_request:
    paths-ignore:
    - 'docs/**'
    - '**.md'
jobs:
  test_post_processing:
    runs-on: ${{ matrix.platform }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      max-parallel: 1
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.9.7]
    # container:
    #     image: ghcr.io/msk-access/postprocessing_variant_calls:feature-add_inputs
    #     credentials:
    #       username: ${{ github.actor }}
    #       password: ${{ secrets.github_token }}
    steps: 
      # Checkout Repo 
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          submodules: recursive
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.7
      - name: Install Conda 
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          $CONDA/bin/conda env update --file environment.yml --name base
      # get current branch 
      # - name: Extract branch name
      #   run: |
      #     echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      #   id: extract_branch
      
      # - name: Checkout current branch of postprocessing_variant_calls 
      #   run: |
      #     # install postprocessing_variant_calls 
      #     cd /opt/postprocessing_variant_calls
      #     git checkout ${{ steps.extract_branch.outputs.branch }} 
      #     git pull
      
      # - name: Clone current branch of postprocessing_variant_calls
      #   run: |
      #     cd /opt 
      #     git clone --recursive -b feature/add_inputs https://github.com/msk-access/postprocessing_variant_calls.git 
      - name: Create conda virtual environment
        run: | 
          conda env create -f environment.yml 

      - name: Install depencies
        run: | 
          make deps-install

      - name: Start conda env and Pytest 
        run: |
          "$(conda shell.bash hook)"
          conda activate vardict 
          pytest tests
            
